/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ClienteDAO;
import DAO.FornecedorDAO;
import DAO.ItensNotaDAO;
import DAO.NotaDAO;
import DAO.ProdutoDAO;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.Fornecedor;
import model.Nota;
import model.Produto;
import model.ProdutosNota;

/**
 *
 * @author akiamara
 */
public class FormularioNota extends javax.swing.JFrame {

    /**
     * Creates new form FormulárioNota
     */
    public FormularioNota() {
        initComponents();

        if(rdbEntrada.isSelected()) {
            preencherFornecedores();
        }
        else if(rdbSaida.isSelected()) {
            preencherClientes();
        }
        
        preencherProdutos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoNota = new javax.swing.ButtonGroup();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtValorTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDataEmissao = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        cbbPagamentos = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        rdbEntrada = new javax.swing.JRadioButton();
        rdbSaida = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        cbbDestinatario = new javax.swing.JComboBox();
        SalvarDados = new javax.swing.JButton();
        btnlimparDados = new javax.swing.JButton();
        btnConsultarNotas = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cbbProdutos = new javax.swing.JComboBox();
        btnAdicionarItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItensNota = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtValorUnidade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnRemoverItem = new javax.swing.JButton();
        btnQtdMais = new javax.swing.JButton();
        btnQtdMenos = new javax.swing.JButton();

        jButton5.setBackground(new java.awt.Color(238, 213, 97));
        jButton5.setText("limpar Dados");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("Formulário de Cadastro de Notas");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Preço Total da Nota em Reais (R$)");

        txtValorTotal.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Data de Emissão");

        txtDataEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Forma de Pagamento");

        cbbPagamentos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pix", "Dinheiro", "Débito", "Crédito" }));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Tipo ");

        btgTipoNota.add(rdbEntrada);
        rdbEntrada.setSelected(true);
        rdbEntrada.setText("Entrada");
        rdbEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEntradaActionPerformed(evt);
            }
        });

        btgTipoNota.add(rdbSaida);
        rdbSaida.setText("Saída");
        rdbSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbSaidaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Destinatário");

        SalvarDados.setBackground(new java.awt.Color(18, 189, 1));
        SalvarDados.setText("Salvar Dados");
        SalvarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarDadosActionPerformed(evt);
            }
        });

        btnlimparDados.setBackground(new java.awt.Color(238, 213, 97));
        btnlimparDados.setText("limpar Dados");
        btnlimparDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparDadosActionPerformed(evt);
            }
        });

        btnConsultarNotas.setBackground(new java.awt.Color(51, 204, 255));
        btnConsultarNotas.setText("Consultar Notas");
        btnConsultarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarNotasActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("Produtos");

        cbbProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbProdutosActionPerformed(evt);
            }
        });

        btnAdicionarItem.setText("Adicionar");
        btnAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemActionPerformed(evt);
            }
        });

        tblItensNota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Valor", "Quantidade"
            }
        ));
        jScrollPane1.setViewportView(tblItensNota);

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Quantidade");

        txtQuantidade.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("Valor Unidade em Reais(R$)");

        txtValorUnidade.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setText("Itens na nota");

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel11.setText("Dados da Nota Fiscal");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setText("Dados de Itens da Nota");

        btnRemoverItem.setBackground(new java.awt.Color(255, 49, 49));
        btnRemoverItem.setText("Remover Item Selecionado");
        btnRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverItemActionPerformed(evt);
            }
        });

        btnQtdMais.setText("+");
        btnQtdMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQtdMaisActionPerformed(evt);
            }
        });

        btnQtdMenos.setText("-");
        btnQtdMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQtdMenosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cbbPagamentos, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtValorTotal, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel1))
                                    .addGap(59, 59, 59)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel6)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(rdbEntrada)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(rdbSaida))
                                        .addComponent(txtDataEmissao)))
                                .addComponent(cbbDestinatario, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(cbbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionarItem))
                            .addComponent(jLabel12)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnConsultarNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnlimparDados)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnRemoverItem)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(112, 112, 112))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SalvarDados)
                                    .addComponent(txtValorUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnQtdMais, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQtdMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoverItem))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbPagamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdbEntrada)
                            .addComponent(rdbSaida))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarItem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnQtdMais, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnQtdMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtValorUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SalvarDados)
                            .addComponent(btnlimparDados)
                            .addComponent(btnConsultarNotas))))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    float valorTotal = 0;
    int quantidade = 1;
    // Crio esse objeto do tipo DecimalFormato para especificar a mascara de 2 casas decimais
    DecimalFormat formatoDuasCasas = new DecimalFormat( "#.00" ); 

    // Método comum para  atualizar se o destinário é Cliente ou Fornecedor
    private void atualizarDestinatario() {
        cbbDestinatario.removeAllItems();

        if (rdbEntrada.isSelected()) {
            preencherFornecedores();
            
        } else if (rdbSaida.isSelected()) {
            preencherClientes();
        }
        
        preencherProdutos();
    }
    
    private void rdbEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEntradaActionPerformed
        atualizarDestinatario();
    }//GEN-LAST:event_rdbEntradaActionPerformed

    private void rdbSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbSaidaActionPerformed
        atualizarDestinatario();
    }//GEN-LAST:event_rdbSaidaActionPerformed

    // Metodo comum para adicionar item na tabela
    private void btnAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemActionPerformed
       
        DefaultTableModel dtmItens = (DefaultTableModel) tblItensNota.getModel();
        // Pego o produto selecionado na Combobox e divido a partir do separador " - "
        String produtoInteiro = cbbProdutos.getSelectedItem().toString();
        String[] valor = produtoInteiro.split(" - ");
     
        // Crio um objeto para popular a tabela
        Object[] produto = new Object[]{ 
            valor[0], // Codigo
            valor[1], // Nome
            txtValorUnidade.getText(), 
            txtQuantidade.getText() 
        };
        
        dtmItens.addRow(produto);
        
        // Atualizo o valor total 
        valorTotal += Float.parseFloat(txtValorUnidade.getText()) * Integer.parseInt(txtQuantidade.getText());
        txtValorTotal.setText(String.valueOf(formatoDuasCasas.format(valorTotal)));
        
    }//GEN-LAST:event_btnAdicionarItemActionPerformed

    // Método comum para remover item da tabela
    private void btnRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverItemActionPerformed
        
        // Pego a linha e o modelo da tabela
        int linha = tblItensNota.getSelectedRow();
        DefaultTableModel dtmItens = (DefaultTableModel) tblItensNota.getModel();
        
        // Atualizo o valor total, a partir dos valores na tabela
        valorTotal -= (Float.parseFloat(dtmItens.getValueAt(linha, 2).toString()) * Integer.parseInt(dtmItens.getValueAt(linha, 3).toString()));
        dtmItens.removeRow(linha);  
        // Atualizo o valor e formato pra ser com 2 casas decimais
        txtValorTotal.setText(String.valueOf(formatoDuasCasas.format(valorTotal)));

    }//GEN-LAST:event_btnRemoverItemActionPerformed

    // Método comum para salvar dados da Nota
    private void SalvarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarDadosActionPerformed
        
        NotaDAO nDAO = new NotaDAO();
        
        Nota nota = new Nota();

        // lógica para salvar os Dados da Nota em si
        nota.setDataEmissao(txtDataEmissao.getText());
        nota.setFormaPagamento(cbbPagamentos.getSelectedItem().toString());
        nota.setValorTotal(Float.parseFloat(txtValorTotal.getText().replace(",", ".")));

        if(rdbEntrada.isSelected()) {
            // Pego o objeto da combobox e converto para um objeto do tipo Fornecedor
            Fornecedor forn = (Fornecedor) cbbDestinatario.getSelectedItem();
            nota.setTipoNota(false); // atualizo o tipo da nota pra Entrada
            nota.setFornecedor(forn); // associo o objeto 
        } else if(rdbSaida.isSelected()) {
            Cliente cli = (Cliente) cbbDestinatario.getSelectedItem();
            nota.setTipoNota(true);
            nota.setCliente(cli);
        }
        
        int idGerado = nDAO.inserirNota(nota); // insere e após isso pega o ID gerado
        
        // lógica para salvar os itens da nota, percorrendo a lista
        DefaultTableModel dtmItens = (DefaultTableModel) tblItensNota.getModel();
        int tamanhoItensTab = dtmItens.getRowCount(); // pega numero de linhas da tabela
        

        // Percorre cada item e cadastra no banco
        for(int i = 0; i < tamanhoItensTab; i++) {
            
            ProdutosNota item = new ProdutosNota();
            Produto prod = new Produto();
            
            
            int codProduto = Integer.parseInt(dtmItens.getValueAt(i, 0).toString());
            prod.setProdutoCodigo(codProduto);
            
            nota.setCodigo(idGerado);
            
            item.setProduto(prod);
            item.setNotaFiscal(nota);
            item.setProduto(prod); 
            item.setQuantidade(Integer.parseInt(dtmItens.getValueAt(i, 3).toString()));
            item.setValorUnidade(Float.parseFloat(dtmItens.getValueAt(i, 2).toString()));
            
            ItensNotaDAO iDAO = new ItensNotaDAO();
            iDAO.inserirItensNota(item);
            
        }        
        limparDados();
        preencherProdutos();
    }//GEN-LAST:event_SalvarDadosActionPerformed

    // Método para atuacizar o valor unitário do Produto 
    private void cbbProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbProdutosActionPerformed
        if(cbbProdutos.getSelectedItem() == null) {
            // apenas encerra
            return;
        }
        String produto = cbbProdutos.getSelectedItem().toString();
        String[] valor = produto.split(" - ");
        
        // lógica para atualizar o campo de preço do produto, sempre que selecionar um novo Produto na combobox
        txtValorUnidade.setText(valor[2]);
        // toda vez que seleciono um novo preciso resetar a quantidade          
        txtQuantidade.setText("1");
        quantidade = 1;
    }//GEN-LAST:event_cbbProdutosActionPerformed

    // Método comum para aumentar a quantidade
    private void btnQtdMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQtdMaisActionPerformed
       
        // Pego o item selecionado na combobox
        String produto = cbbProdutos.getSelectedItem().toString();
        // E separo pelo separador num array de Strings
        String[] qtd = produto.split(" - ");
        
        boolean podeAumentar = false;
        
        int valorQtd = Integer.parseInt(qtd[3]);
        // Verifico se a quantidade não ultrapassa o que tem em estoque
        
        // TODO refatorar isso pra usar uma flag boolean
        if(quantidade < valorQtd && rdbSaida.isSelected() ) { // quando é saída preciso limitar
            podeAumentar = true;
        }
        else if(rdbEntrada.isSelected()) { // quando é entrada não
            podeAumentar = true;
        }
        
        if(podeAumentar) {
            quantidade++;
        }
        txtQuantidade.setText(String.valueOf(quantidade));
        
    }//GEN-LAST:event_btnQtdMaisActionPerformed

    // Método comum para diminuir a quantidade
    private void btnQtdMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQtdMenosActionPerformed
       
        // Toda vez que eu chamar o botão decremento, com o máximo sendo 1 
        if(quantidade > 1) {
            quantidade--;
        }
        
        txtQuantidade.setText(String.valueOf(quantidade)); // atualizo a quantidad
    }//GEN-LAST:event_btnQtdMenosActionPerformed
    
    // Método comum para chamar o formulário ConsultarNotas atráves da ação do botão
    private void btnConsultarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarNotasActionPerformed
        ConsultarNotas csN = new ConsultarNotas();
        csN.setVisible(true);
    }//GEN-LAST:event_btnConsultarNotasActionPerformed

    // Método comum para limpar os dados do formulário
    public void limparDados() {
        
        DefaultTableModel dtmItens = (DefaultTableModel) tblItensNota.getModel();

        valorTotal = 0;
        txtDataEmissao.setText("");
        txtQuantidade.setText("");
        txtValorTotal.setText("");
        txtValorUnidade.setText("");
        cbbDestinatario.setSelectedIndex(0);
        cbbPagamentos.setSelectedIndex(0);
        dtmItens.setRowCount(0);
        cbbProdutos.setSelectedIndex(0);
    }
    
    // Método comum do botão de limpar Dados
    private void btnlimparDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparDadosActionPerformed
        
        limparDados();

    }//GEN-LAST:event_btnlimparDadosActionPerformed
    
    // Método comum para preencher a combobox com Clientes
    public void preencherClientes(){
        
        ClienteDAO cDAO = new ClienteDAO();     
        List<Cliente> listaClientes = cDAO.consultarClientes(); // armazeno a lista retornada numa variavel de lista
                
        // para cada Cliente na lista, eu adiciono na combobox
        for(Cliente cli : listaClientes) {
            // o que aparece na combo box está no metodo toString() sobreescrito na classe Cliente
            cbbDestinatario.addItem(cli);       
        }
    }
      
    // Método comum para preencher a combobox com Fornecedores
    public void preencherFornecedores(){
        
        FornecedorDAO fDAO = new FornecedorDAO();
        List<Fornecedor> listaFornecedores = fDAO.consultarFornecedores();
        
        // para cada Fornecedor na lista, eu adiciono na combobox
        for(Fornecedor forn : listaFornecedores) {
            // o que aparece na combo box está no metodo toString() sobreescrito na classe Fornecedor
            cbbDestinatario.addItem(forn);
        }
    }    
    
    // Método comum para preencher a combobox com Produtos
    public void preencherProdutos(){
         
        cbbProdutos.removeAllItems();
        
        ProdutoDAO pDAO = new ProdutoDAO();
        List<Produto> listaProdutos =  new ArrayList<>();
        
        if(rdbEntrada.isSelected()) {
            listaProdutos = pDAO.consultarProdutos();
        }
        else if(rdbSaida.isSelected()) {
            listaProdutos = pDAO.consultarProdutosEstoque();
        }
        
        for(Produto prod : listaProdutos) {
            cbbProdutos.addItem(prod);      
        }
  
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioNota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SalvarDados;
    private javax.swing.ButtonGroup btgTipoNota;
    private javax.swing.JButton btnAdicionarItem;
    private javax.swing.JButton btnConsultarNotas;
    private javax.swing.JButton btnQtdMais;
    private javax.swing.JButton btnQtdMenos;
    private javax.swing.JButton btnRemoverItem;
    private javax.swing.JButton btnlimparDados;
    private javax.swing.JComboBox cbbDestinatario;
    private javax.swing.JComboBox cbbPagamentos;
    private javax.swing.JComboBox cbbProdutos;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdbEntrada;
    private javax.swing.JRadioButton rdbSaida;
    private javax.swing.JTable tblItensNota;
    private javax.swing.JFormattedTextField txtDataEmissao;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtValorTotal;
    private javax.swing.JTextField txtValorUnidade;
    // End of variables declaration//GEN-END:variables
}
